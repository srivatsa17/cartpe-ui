name: CI/CD
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
    pull_request:
        branches:
        - master
        types: [closed]
jobs:
    Install-dependencies:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x]
        steps:
        -   name: Checkout Repository
            uses: actions/checkout@v3

        -   name: Setup Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v3
            with:
                node-version: ${{ matrix.node-version }}

        -   name: Install dependencies
            run: npm ci

    Deploy-Production:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        needs: Install-dependencies
        steps:
        -   name: Checkout Repository
            uses: actions/checkout@v3

        -   name: Install Vercel CLI
            run: npm install --global vercel@latest

        -   name: Pull Vercel Environment Information
            run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

        -   name: Build Project Artifacts
            run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

        -   name: Deploy Project Artifacts to Vercel
            run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
