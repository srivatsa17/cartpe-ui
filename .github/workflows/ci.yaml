name: CI/CD
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
    push:
        branches:
        - master
jobs:
    eslint:
        runs-on: ubuntu-latest
        steps:
        -   name: Checkout Repository
            uses: actions/checkout@v3

        -   name: Install
            uses: ./.github/common-actions/install

        -   name: Run ESLint
            run: npm run lint

    prettier:
        runs-on: ubuntu-latest
        steps:
        -   name: Checkout Repository
            uses: actions/checkout@v3

        -   name: Install
            uses: ./.github/common-actions/install

        -   name: Run ESLint
            run: npm run format:check

    deploy-pre-production:
        if: github.event_name == 'push' && github.ref == 'refs/heads/development'
        runs-on: ubuntu-latest
        needs: [eslint, prettier]
        steps:
        -   name: Checkout Repository
            uses: actions/checkout@v3

        -   name: Install Vercel CLI
            run: npm install --global vercel@latest

        -   name: Pull Vercel Environment Information
            run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

        -   name: Build Project Artifacts
            run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

        -   name: Deploy Project Artifacts to Vercel
            run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

    deploy-production:
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        needs: [eslint, prettier]
        steps:
        -   name: Checkout Repository
            uses: actions/checkout@v3

        -   name: Install Vercel CLI
            run: npm install --global vercel@latest

        -   name: Pull Vercel Environment Information
            run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

        -   name: Build Project Artifacts
            run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

        -   name: Deploy Project Artifacts to Vercel
            run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
